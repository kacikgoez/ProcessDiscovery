name: Test code and generate coverage
on:
  pull_request:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      #----------------------------------------------
      #           install & configure poetry
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-test-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --with test --no-interaction --no-root
      #----------------------------------------------
      # load raw dataset from secrets
      #----------------------------------------------
      - name: Load raw dataset
        run: |
          mkdir -p backend/data/raw
          echo "${{ secrets.RAW_DATASET }}" > backend/data/raw/opd.csv
      #----------------------------------------------
      # extract the event log from the raw dataset
      #----------------------------------------------
      - name: Extract event log
        run: |
          source .venv/bin/activate
          python backend/src/data/extract.py
      #----------------------------------------------
      # run pytest to run tests and generate coverage
      #----------------------------------------------
      - name: Activate venv and run pytest
        run: |
          source .venv/bin/activate
          pytest
      #----------------------------------------------
      # store coverage report as artifact
      #----------------------------------------------
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml